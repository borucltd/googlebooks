{"version":3,"sources":["utils/API.js","components/Saved/index.js","components/Search/index.js","pages/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["API","console","log","axios","get","BASEURL","searchBooks","query","then","res","catch","err","Saved","_useState","useState","_useState2","Object","slicedToArray","books","react_default","a","createElement","Box","border","Search","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","menuButton","marginRight","title","links","primary","contrastText","marginLeft","Home","_React$createElement","classes","Grid","container","justify","defineProperty","item","xs","AppBar","position","Toolbar","variant","Typography","Link","className","href","react_router_dom","react_router","exact","path","component","App","pages_Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.67a3e501.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASEURL = \"http://localhost:3001\";\nconst QUERY = \"/api/books\";\n\n// Export an object with a \"search\" method that searches the books\nexport default {\n  searchBooks: function() {\n    console.log(\"Making request to backend\")\n    return axios.get(BASEURL + QUERY);\n  }\n};\n","import React, { useState } from \"react\";\nimport Box from '@material-ui/core/Box';\nimport API from \"../../utils/API\";\n\n\n\nconst searchBooks = query => {\n  API.searchBooks()\n    .then(res => console.log(res))\n    .catch(err => console.log(err));\n}\n\n\nconst Saved = () => {\n\n  const [ books, setBooks ] = useState(searchBooks)\n\n  return (\n        <Box border={1}>\n            <h1>Saved {books}</h1>\n        </Box>           \n  );\n};\n\nexport default Saved;\n","import React from \"react\";\n\n\nconst Search = () => {\n  return (\n    \n            <h1>Search</h1>\n            \n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  BrowserRouter\n} from \"react-router-dom\";\n\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\n\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport Saved from \"../components/Saved\";\nimport Search from \"../components/Search\";\n\n\n\n\n// const theme = createMuiTheme({\n//   palette: {\n//     primary: {\n//       light: '#757ce8',\n//       main: '#3f50b5',\n//       dark: '#002884',\n//       contrastText: '#fff',\n//     },\n//     secondary: {\n//       light: '#ff7961',\n//       main: '#f44336',\n//       dark: '#ba000d',\n//       contrastText: '#000',\n//     },\n//   },\n// });\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  links: {\n    color: theme.palette.primary.contrastText,\n    marginLeft: theme.spacing(2),\n  }\n}));\n\n\nconst Home = () => {\n\n  const classes = useStyles();\n\n    return (\n      <Grid container justify = \"center\"  justify=\"space-evenly\" alignItems=\"center\" spacing={6} >     \n        <Grid item xs={10}>\n          <AppBar position=\"static\">\n            <Toolbar variant='regular'>\n              <Typography variant=\"h6\" color=\"inherit\">\n                <Link className={classes.links} href=\"/\">\n                  Google Books\n                </Link>\n                <Link className={classes.links} href=\"/Search\" color=\"inherit\">\n                  Search\n                </Link>\n                <Link className={classes.links} href=\"/Saved\" color=\"inherit\">\n                  Saved\n                </Link>\n              </Typography>\n            </Toolbar>\n          </AppBar>  \n        </Grid>\n       \n        <Grid item xs={8} >      \n          <Typography variant=\"h2\" color=\"inherit\">\n            (React) Google Books Search\n          </Typography>\n          <Typography variant=\"h4\" color=\"inherit\">\n            Search for and Save Books of Interest\n          </Typography>\n        </Grid>\n        \n        <Grid item xs={8}>      \n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Saved} />\n            <Route exact path=\"/saved\" component={Saved} />\n            <Route exact path=\"/search\" component={Search} />\n          </Switch>\n        </BrowserRouter>         \n        </Grid>\n    </Grid>\n    );\n  };\n\n  export default Home;\n\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\"\n\nfunction App() {\n  return (\n\n    \n    <Home>\n\n    </Home>\n      \n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}