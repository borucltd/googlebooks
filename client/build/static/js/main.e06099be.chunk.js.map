{"version":3,"sources":["utils/API.js","components/Saved/index.js","components/Search/index.js","pages/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["API","searchBooks","axios","get","saveBook","book","post","deleteBook","id","delete","searchGBooks","Saved","_useState","useState","_useState2","Object","slicedToArray","books","setBooks","loadBooks","console","log","then","res","data","length","_id","title","image","authors","description","catch","err","useEffect","react_default","a","createElement","Box","border","m","p","spacing","map","index","mt","key","Card","CardActionArea","CardMedia","src","width","height","alt","CardContent","Typography","gutterBottom","variant","component","join","color","CardActions","Button","size","href","link","target","style","textDecoration","rel","onClick","useStyles","makeStyles","theme","root","& > *","margin","Search","classes","_useState3","_useState4","phrase","setPhrase","handleSubmit","event","preventDefault","items","newBooks","inputBooks","keys","item","forEach","volumeInfo","imageLinks","searchInfo","normalization","searchGBook","concat","className","noValidate","autoComplete","onSubmit","TextField","label","onInput","e","value","type","disabled","splice","flexGrow","paper","padding","textAlign","palette","text","secondary","menuButton","marginRight","links","primary","contrastText","marginLeft","Home","Grid","container","justify","alignItems","xs","AppBar","position","Toolbar","Link","react_router_dom","react_router","exact","path","App","pages_Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e06099be.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// apis calls\nexport default  {\n  searchBooks:  function() {\n    return axios.get(\"/api/books\")\n  },\n  saveBook: function(book) {\n    return axios.post(\"/api/books/\",book);\n  }, \n  deleteBook:   function(id) {\n    return  axios.delete(\"/api/books/\" + id);\n  },\n  searchGBooks: function(id) {\n    return axios.post(\"/api/gbooks/\" + id);\n  }  \n};\n","import React, { useState, useEffect } from \"react\";\nimport API from \"../../utils/API\";\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst Saved = () => {\n\n  const [books, setBooks] = useState([])\n\n  useEffect(() => {\n    loadBooks()\n  }, [])\n\n  // loads all books from database\n  function loadBooks() {\n    console.log(\"Loading books from mongodb.\")\n    API.searchBooks()\n    .then(res => {\n      if (res.data.length) {\n        setBooks(res.data)\n      } else {\n        setBooks([{\n          _id: \"empty\",\n          title: \"There are no books\",\n          image: \"https://icon-library.net/images/empty-icon/empty-icon-0.jpg\",\n          authors: [\"Your database\"],\n          description: \"Please click on Search and add books.\"\n        }])\n      }      \n    })\n    .catch(err => console.log(err))\n  }  \n\n\n  \n  // deletes a book from the database\n  function deleteBook(id) {\n    console.log(\"Making request to backend, delete\" +id)\n    API.deleteBook(id)\n    .then( res => loadBooks())\n    .catch(err => console.log(err))\n  }\n   \n\n\n  return (\n    <Box  border={1} m={2} p={4} spacing={6}>\n      {books.map((book,index) => {\n        return (\n          \n           <Box mt={2} key={book._id}>\n            <Card>\n              <CardActionArea>\n                <CardMedia title={book.title}>\n                <img src={book.image}  width=\"50\"  height=\"50\" alt=\"Can't download\"/>\n                </CardMedia>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {book.title}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                    Written by {book.authors.join(\", \")}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {book.description}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                  <a href={book.link} target=\"_blank\" style={{textDecoration: \"none\"}} rel=\"noopener noreferrer\">\n                    View\n                  </a>\n                </Button>\n                <Button size=\"small\" color=\"primary\">\n                  <span   onClick={() => deleteBook(book._id)}>\n                    Delete \n                  </span>\n                </Button>\n              </CardActions>\n            </Card>        \n            </Box>   \n        )\n        }\n      )}\n    </Box>               \n  )\n};\n\nexport default Saved;\n","import React, { useState, useEffect } from \"react\";\nimport API from \"../../utils/API\";\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '100%',\n    },\n  },\n}));\n  \nconst Search = () => {\n\n  const classes = useStyles()\n  const [books, setBooks] = useState([])\n  const [phrase, setPhrase] = useState('')\n  \n   \n  \n\n  function handleSubmit(event){\n    event.preventDefault();\n    searchGBook(phrase)\n  }\n\n  function searchGBook(phrase) {\n    console.log(\"Making backend request to Google.\")\n    API.searchGBooks(phrase)\n    .then(res =>{ \n      console.log(typeof res.data)    \n      if (typeof res.data === 'string') {\n        setBooks([])        \n      } else {\n        if (res.data.items.length === 0 || typeof res.data.items === 'undefined') {\n          setBooks([])\n        } else {\n          const newBooks = normalization(res.data.items)\n          setBooks(newBooks)\n        }\n      }\n    })\n    .catch(err => console.log(err))\n  }\n\n  // saves a book to the database\n  function saveBook(id) {\n  \n    console.log(\"Making request to backend, save book number: \" + id)\n    //console.log(JSON.stringify(books[id]))\n    API.saveBook(books[id])\n    .then( res => {\n      // remove a book, terrible way\n      const removedBook = books.splice(id,1)\n      setBooks([])\n      setBooks(books)\n      console.log(\"SAVED\")\n    })\n    .catch(err => console.log(err))\n  }\n\n  // here we change objects from google API to match mongo model\n  function normalization(inputBooks) {\n\n    const keys = [\n      'title',\n      'authors',\n      'thumbnail',\n      'previewLink',\n      'textSnippet']\n\n    const outputBooks = inputBooks.map((item) => {\n\n        let book = {}\n           \n        keys.forEach((key) => {\n\n          switch(key) {\n\n            case 'title':\n              typeof item.volumeInfo[key] !== 'undefined' ? book.title = item.volumeInfo[key] : book.title = \"Unknown\"\n              break;\n\n            case 'authors':\n              typeof item.volumeInfo[key] !== 'undefined' ? book.authors = item.volumeInfo[key] : book.authors = [\"Unknown\"]\n              break;\n\n            case 'thumbnail':\n              if (typeof item.volumeInfo.imageLinks !== 'undefined')  {\n                typeof item.volumeInfo.imageLinks[key] !== 'undefined' ? book.image = item.volumeInfo.imageLinks[key] : book.image = \"Unknown\"\n              } else {\n                book.description = \"Unknown\"\n              }\n              break;\n\n            case 'previewLink':\n              typeof item.volumeInfo[key] !== 'undefined' ? book.link = item.volumeInfo[key] : book.link = \"Unknown\"\n              break;\n\n            case 'textSnippet':\n              if (typeof item.searchInfo !== 'undefined')  {\n                typeof item.searchInfo[key] !== 'undefined' ? book.description = item.searchInfo[key] : book.description = \"Unknown\"\n              } else {\n                book.description = \"Unknown\"\n              }\n              break;\n            default:\n              console.log(\"Unknown key\")\n              break;\n          }\n        }\n        )\n          return book\n      })\n      return outputBooks\n    }\n    \n  \n\n  // conditional rendering based on the number of books in books array\n  if (books.length === 0 ) {\n\n    console.log(`There are ${books.length} books.`)\n    return (\n    <Box  border={1} m={2} p={4} spacing={6}> \n      <Box mt={2}>\n        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n          <TextField id=\"outlined-basic\" label=\"Search for the title which includes\" variant=\"outlined\"  onInput={ e=>setPhrase(e.target.value)}/>\n            <Button type=\"submit\" size=\"small\" color=\"primary\">\n              Search\n            </Button>\n        </form>\n      </Box>\n    </Box>\n    )\n\n  } else {\n\n    console.log(`There are ${books.length} books.`)\n    return (\n      <Box  border={1} m={2} p={4} spacing={6}> \n        <Box mt={2}>\n          <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n            <TextField id=\"outlined-basic\" label=\"Search for the title which includes\" variant=\"outlined\"  onInput={ e=>setPhrase(e.target.value)}/>\n              <Button type=\"submit\" size=\"small\" color=\"primary\">\n                Search\n              </Button>\n          </form>\n                     \n          { books.map((book,index) => {\n          return (\n            <Box mt={2} key={index}>\n              <Card>\n                <CardActionArea>\n                  <CardMedia title={book.title}>\n                  <img src={book.image}  width=\"50\"  height=\"50\" alt=\"Can't download\"/>\n                  </CardMedia>\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {book.title}\n                    </Typography>\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                      Written by {book.authors.join(\", \")}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                      {book.description}\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n                <CardActions>\n                  <Button size=\"small\" color=\"primary\">\n                    <a href={book.link} target=\"_blank\" style={{textDecoration: \"none\"}} rel=\"noopener noreferrer\">\n                      View\n                    </a>\n                  </Button>\n                  <Button size=\"small\" color=\"primary\"  >\n                    <span  disabled onClick={(event) => {\n                      event.preventDefault()\n                      saveBook(index)\n\n                      }}>\n                      Save \n                    </span>\n                  </Button>\n                </CardActions>\n              </Card>        \n              </Box>   \n            )}\n          )}\n        </Box>\n      </Box>               \n    )\n  }\n};\n\nexport default Search;\n","import React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  BrowserRouter\n} from \"react-router-dom\";\n\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\n\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport Saved from \"../components/Saved\";\nimport Search from \"../components/Search\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  links: {\n    color: theme.palette.primary.contrastText,\n    marginLeft: theme.spacing(2),\n  }\n}));\n\n\nconst Home = () => {\n\n  const classes = useStyles();\n\n    return (\n      <Grid container justify=\"space-evenly\" alignItems=\"center\" spacing={6} >     \n        <Grid item xs={10}>\n          <AppBar position=\"static\">\n            <Toolbar variant='regular'>\n              <Typography variant=\"h6\" color=\"inherit\">\n                <Link className={classes.links} href=\"/\">\n                  Google Books\n                </Link>\n                <Link className={classes.links} href=\"/Search\" color=\"inherit\">\n                  Search\n                </Link>\n                <Link className={classes.links} href=\"/Saved\" color=\"inherit\">\n                  Saved\n                </Link>\n              </Typography>\n            </Toolbar>\n          </AppBar>  \n        </Grid>\n       \n        <Grid item xs={8} >      \n          <Typography variant=\"h2\" color=\"inherit\">\n            (React) Google Books Search\n          </Typography>\n          <Typography variant=\"h4\" color=\"inherit\">\n            Search for and Save Books of Interest\n          </Typography>\n        </Grid>\n        \n        <Grid item xs={8}>      \n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Saved} />\n            <Route exact path=\"/saved\" component={Saved} />\n            <Route exact path=\"/search\" component={Search} />\n          </Switch>\n        </BrowserRouter>         \n        </Grid>\n    </Grid>\n    );\n  };\n\n  export default Home;\n\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\"\n\nfunction App() {\n  return (\n\n    \n    <Home>\n\n    </Home>\n      \n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}